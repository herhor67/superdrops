#hercore superdrops
#=============================================#
#   Skrypt napisany przez: herhor67           #
#   Nazwa: SuperDrops                         #
#=============================================#
#  Licencja skryptu:                          #
# * Nie zezwalam na:                          #
# - Usuwanie treści o autorze!                #
# - Podszywanie się pod autora!               #
# - Używanie kodu skryptu w swoich skryptach! #
# - Zarabianie na skrypcie!                   #
# - Wrzucanie skryptu do internetu!           #
# - Dodawanie kodu na swoja potrzebe!         #
# - Modyfikowanie kodu na swoja potrzebe!     #
#=============================================#

options:
#szansa bez fortuny:
	wegiel: 1.6
	diament: 0.2
	szmaragd: 0.3
	zloto: 0.4
	zelazo: 0.6
	lazuryt: 1.9
	redstone: 1.9
	kwarc: 1.9
	drewno: 2.7

#inneinfo:
	diamentmax: 16
	diamentmin: 9
	szmaragdmax: 128
	szmaragdmin: 60
	wegielmax: 128
	zelazomax: 64
	zlotomax: 32
	lapismax:32
	redstonemax: 16

#ilosc expa za 1 blok
	xp: 1

aliases:
	diament = 57
	diamentitem = 264
	br = 369

on script load:
	wait 1 second
	if file "plugins/Skript/superdrops/multipliers.yml" doesn't exists:
		download "https://raw.githubusercontent.com/herhor67/superdrops/master/multipliers.yml" to "plugins/Skript/superdrops/multipliers.yml"
#==========#
	register new shaped recipe for diamond pickaxe named "&bSuperPickaxe" with lore "&7Fortune X" using diament, diament, diament, none, stick, none, none, stick, none
	register new shaped recipe for diamond pickaxe named "&bSuperPickaxe" with lore "&7Smelting I" using diamentitem, diamentitem, diamentitem, none, furnace, none, none, stick, none
#==========#
	register new shaped recipe for diamond axe named "&bSuperAxe" with lore "&7Fortune X" using diament, diament, none, diament, stick, none, none, stick, none
	register new shaped recipe for diamond axe named "&bSuperAxe" with lore "&7Fortune X" using diament, diament, none, stick, diament, none, stick, none, none
	register new shaped recipe for diamond axe named "&bSuperAxe" with lore "&7Fortune X" using none, diament, diament, none, diament, stick, none, none, stick
#----------#
	register new shaped recipe for diamond axe named "&bSuperAxe" with lore "&7Smelting I" using diamentitem, diamentitem, none, diamentitem, furnace, none, none, stick, none
	register new shaped recipe for diamond axe named "&bSuperAxe" with lore "&7Smelting I" using diamentitem, diamentitem, none, furnace, diament, none, stick, none, none
	register new shaped recipe for diamond axe named "&bSuperAxe" with lore "&7Smelting I" using none, diamentitem, diamentitem, none, diamentitem, furnace, none, none, stick
#==========#
	register new shaped recipe for diamond shovel named "&bSuperShovel" with lore "&7Fortune X" using none, diament, none, none, stick, none, none, stick, none
	register new shaped recipe for diamond shovel named "&bSuperShovel" with lore "&7Fortune X" using diament, none, none, stick, none, none, stick, none, none
	register new shaped recipe for diamond shovel named "&bSuperShovel" with lore "&7Fortune X" using none, none, diament, none, none, stick, none, none, stick
#----------#
	register new shaped recipe for diamond shovel named "&bSuperShovel" with lore "&7Smelting I" using none, diamentitem, none, none, furnace, none, none, stick, none
	register new shaped recipe for diamond shovel named "&bSuperShovel" with lore "&7Smelting I" using diamentitem, none, none, furnace, none, none, stick, none, none
	register new shaped recipe for diamond shovel named "&bSuperShovel" with lore "&7Smelting I" using none, none, diamentitem, none, none, furnace, none, none, stick
#==========#
	register new shaped recipe for fishing rod named "&bSuperFishingRod" with lore "&7Luck of the Sea X" using none, none, br, none, br, string, br, none, string
	register new shaped recipe for fishing rod named "&bSuperFishingRod" with lore "&7Smelting I" using none, none, furnace, none, stick, string, stick, none, string

command /superdrops [<text>] [<text>]:
	aliases: sd, superdrop
	trigger:
		arg 1 is "szansa":
			arg 2 is set:
				set {_mnoznik} to 1
				loop {superdrop::multipliers::permissions::*}:
					if player has permission "superdrops.%loop-index%":
						loop-value isn't 0:
							set {_mnoznik} to {_mnoznik}*loop-value
							exit loop
			#	{superdrops::turbodrop} is set:
			#		set {_mnoznik} to {_mnoznik}*{superdrops::turbodrop}
				send "&6----------------=============[ &7[&cSuper&6Drop&7] &6]=============----------------"
				send "&fNazwa surowca  &f&l| &fBez enchantu &f&l| &fFortune I   &f&l| &fFortune II   &f&l| &fFortune III"
				send "&f&l----------------------------------------------------------------"
				loop {superdrops::drop::%arg 2%::*}:
					set {_f0} to {superdrops::drop::%arg 2%::%loop-value%::chance} * {_mnoznik}
					set {_f1} to {superdrops::drop::%arg 2%::%loop-value%::chance} * {_mnoznik} * {superdrops::multipliers::fortune::fortune1}
					set {_f2} to {superdrops::drop::%arg 2%::%loop-value%::chance} * {_mnoznik} * {superdrops::multipliers::fortune::fortune2}
					set {_f3} to {superdrops::drop::%arg 2%::%loop-value%::chance} * {_mnoznik} * {superdrops::multipliers::fortune::fortune3}
					send "%coloured {superdrops::drop::%arg 2%::%loop-value%::name}%  &f&l| &f%{_f0}%            &f&l| &f%{_f1}%           &f&l| &f%{_f2}%           &f&l| &f%{_f3}%"
					send "&f&l----------------------------------------------------------------"

#==============================#
#==============================#
#==#         BLOCKS         #==#
#==============================#
#==============================#
on break:
	set {_block} to type of event-block
	set {_multiplier} to 1
#=========={ PERMISSIONS }==========#
	set {_permissionslist::*} to configuration section "multipliers.permissions" get of "plugins/Skript/superdrops/config.yml"
	loop {_permissionslist::*}:
		if player has permission "sd.mp.blocks.%loop-value%":
			set {_permission} to single value "multipliers.permissions.%loop-value%" get of "plugins/Skript/superdrops/config.yml" parsed as number
			set {_multiplier} to {_multiplier}*{_permission}
			exit loop
#=========={ SUPER TOOLS }==========#
	name of player's tool is "&bSuperPickaxe" or "&bSuperAxe" or "&bSuperShovel":
#----------{ smelting 1 }----------#
		1st line of lore of player's tool is "&7Smelting I":
			set {_smelting.mode} to true
		else:
			set {_smelting.mode} to false
#----------{ fortune 10 }----------#
		1st line of lore of player's tool is "&7Fortune X":
			set {_multipliers::super} to single value "multipliers.other.super" get of "plugins/Skript/superdrops/config.yml" parsed as number
			set {_multiplier} to {_multiplier}*{_multipliers::super}
#=========={ FORTUNES }==========#
	player's tool is enchanted with Fortune 3:
		set {_multipliers::fortune} to single value "multipliers.fortune.3" get of "plugins/Skript/superdrops/config.yml" parsed as number
		set {_multiplier} to {_multiplier}*{_multipliers::fortune}
	player's tool is enchanted with Fortune 2:
		set {_multipliers::fortune} to single value "multipliers.fortune.2" get of "plugins/Skript/superdrops/config.yml" parsed as number
		set {_multiplier} to {_multiplier}*{_multipliers::fortune}
	player's tool is enchanted with Fortune 1:
		set {_multipliers::fortune} to single value "multipliers.fortune.1" get of "plugins/Skript/superdrops/config.yml" parsed as number
		set {_multiplier} to {_multiplier}*{_multipliers::fortune}
#=========={ TURBODROP }==========#
	set {_multipliers::turbodrop} to single value "multipliers.other.turbodrop" get of "plugins/Skript/superdrops/config.yml" parsed as number
	if {_multipliers::turbodrop} is set:
		set {_multiplier} to {_multiplier}*{_multipliers::turbodrop}
#=========={ CONFIG }==========#
	set {_config::xp} to single value "blocks.%{_block}%.xp" get of "plugins/Skript/superdrops/config.yml" parsed as number
	set {_basiclist::*} to configuration section "blocks.%{_block}%" get of "plugins/Skript/superdrops/config.yml"
	loop {_basiclist::*}:
		loop-value isn't "xp":
			set {_itemlist::%loop-index%} to loop-value
	loop {_itemlist::*}:
		{_smelting.mode} is true:
			set {_config::item} to single value "blocks.%{_block}%.%loop-value%.itemsmelted" get of "plugins/Skript/superdrops/config.yml" parsed as itemtype
		else:
			set {_config::item} to single value "blocks.%{_block}%.%loop-value%.item" get of "plugins/Skript/superdrops/config.yml" parsed as itemtype
		set {_config::chance} to single value "blocks.%{_block}%.%loop-value%.chance" get of "plugins/Skript/superdrops/config.yml" parsed as integer
		set {_config::tools::*} to value list "blocks.%{_block}%.%loop-value%.tools" get of "plugins/Skript/superdrops/config.yml"
		set {_config::biomes::*} to value list "blocks.%{_block}%.%loop-value%.biomes" get of "plugins/Skript/superdrops/config.yml"
		set {_config::heightmin} to single value "blocks.%{_block}%.%loop-value%.heightmin" get of "plugins/Skript/superdrops/config.yml" parsed as integer
		set {_config::heightmax} to single value "blocks.%{_block}%.%loop-value%.heightmax" get of "plugins/Skript/superdrops/config.yml" parsed as integer
#=========={ DROPPING }==========#
		loop {_config::xp} times:
			give 1 xp to player
		if event-block's y-coordinate < {_config::heightmax}:
			if event-block's y-coordinate > {_config::heightmin}:
				loop {_config::tools::*}:
					if player's tool is (loop-value-2 parsed as itemtype):
						set {_goodtool} to true
				if {_goodtool} is true:
					if {_config::biomes::*} is not set:
						set {_goodbiome} to true
					else:
						loop {_config::biomes::*}:
							if biome at player is (loop-value-2 parsed as biome):
								set {_goodbiome} to true
					if {_goodbiome} is true:
						set {_realchance} to {_config::chance}*{_multiplier}/100
						if {_realchance} is greater than 1:
							set {_realchance} to 1
						chance of {_realchance}:
							set {_config::message} to single value "messages.dropped" get of "plugins/Skript/superdrops/config.yml"
							drop {_config::item} at event-block
							replace all "{ITEM}" with "%{_config::item}%" in {_config::message}
							send "%coloured {_config::message}%"
							add 1 to {superdrops::top::mobs::%{_config::item}%::%player%}

#==============================#
#==============================#
#==#          MOBS          #==#
#==============================#
#==============================#
on death:
	set {_mob} to victim
	set {_mob} to {_mob} parsed as entity type
	set {_multiplier} to 1
#=========={ PERMISSIONS }==========#
	set {_permissionslist::*} to configuration section "multipliers.permissions" get of "plugins/Skript/superdrops/config.yml"
	loop {_permissionslist::*}:
		if attacker has permission "sd.mp.mobs.%loop-value%":
			set {_permission} to single value "multipliers.permissions.%loop-value%" get of "plugins/Skript/superdrops/config.yml" parsed as number
			set {_multiplier} to {_multiplier}*{_permission}
			exit loop
#=========={ SUPER TOOLS }==========#
	name of attacker's tool is "&bSuperSword":
#----------{ smelting 1 }----------#
		1st line of lore of attacker's tool is "&7Smelting I":
			set {_smelting.mode} to true
		else:
			set {_smelting.mode} to false
#----------{ fortune 10 }----------#
		1st line of lore of attacker's tool is "&7Fortune X":
			set {_multipliers::super} to single value "multipliers.other.super" get of "plugins/Skript/superdrops/config.yml" parsed as number
			set {_multiplier} to {_multiplier}*{_multipliers::super}
#=========={ FORTUNES }==========#
	attacker's tool is enchanted with Fortune 3:
		set {_multipliers::fortune} to single value "multipliers.fortune.3" get of "plugins/Skript/superdrops/config.yml" parsed as number
		set {_multiplier} to {_multiplier}*{_multipliers::fortune}
	attacker's tool is enchanted with Fortune 2:
		set {_multipliers::fortune} to single value "multipliers.fortune.2" get of "plugins/Skript/superdrops/config.yml" parsed as number
		set {_multiplier} to {_multiplier}*{_multipliers::fortune}
	attacker's tool is enchanted with Fortune 1:
		set {_multipliers::fortune} to single value "multipliers.fortune.1" get of "plugins/Skript/superdrops/config.yml" parsed as number
		set {_multiplier} to {_multiplier}*{_multipliers::fortune}
#=========={ TURBODROP }==========#
	set {_multipliers::turbodrop} to single value "multipliers.other.turbodrop" get of "plugins/Skript/superdrops/config.yml" parsed as number
	if {_multipliers::turbodrop} is set:
		set {_multiplier} to {_multiplier}*{_multipliers::turbodrop}
#=========={ CONFIG }==========#
	set {_config::xp} to single value "mobs.%{_mob}%.xp" get of "plugins/Skript/superdrops/config.yml" parsed as number
	set {_basiclist::*} to configuration section "mobs.%{_mob}%" get of "plugins/Skript/superdrops/config.yml"
	loop {_basiclist::*}:
		loop-value isn't "xp":
			set {_itemlist::%loop-index%} to loop-value
	loop {_itemlist::*}:
		{_smelting.mode} is true:
			set {_config::item} to single value "mobs.%{_mob}%.%loop-value%.itemsmelted" get of "plugins/Skript/superdrops/config.yml" parsed as itemtype
		else:
			set {_config::item} to single value "mobs.%{_mob}%.%loop-value%.item" get of "plugins/Skript/superdrops/config.yml" parsed as itemtype
		set {_config::chance} to single value "mobs.%{_mob}%.%loop-value%.chance" get of "plugins/Skript/superdrops/config.yml" parsed as integer
		set {_config::tools::*} to value list "mobs.%{_mob}%.%loop-value%.tools" get of "plugins/Skript/superdrops/config.yml"
		set {_config::biomes::*} to value list "mobs.%{_mob}%.%loop-value%.biomes" get of "plugins/Skript/superdrops/config.yml"
#=========={ DROPPING }==========#
		loop {_config::xp} times:
			give 1 xp to attacker
		loop {_config::tools::*}:
			if attacker's tool is (loop-value-2 parsed as itemtype):
				set {_goodtool} to true
		if {_goodtool} is true:
			loop {_config::biomes::*}:
				if biome at attacker is (loop-value-2 parsed as biome):
					set {_goodbiome} to true
			if {_goodbiome} is true:
				set {_realchance} to {_config::chance}*{_multiplier}/100
				if {_realchance} is greater than 1:
					set {_realchance} to 1
				chance of {_realchance}:
					set {_config::message} to single value "messages.dropped" get of "plugins/Skript/superdrops/config.yml"
					drop {_config::item} at victim
					replace all "{ITEM}" with "%{_config::item}%" in {_config::message}
					send "%coloured {_config::message}%" to attacker
					add 1 to {superdrops::top::mobs::%{_config::item}%::%attacker%}

#==============================#
#==============================#
#==#         FISHING        #==#
#==============================#
#==============================#
on fishing state of caught fish:
	set {_multiplier} to 1
#=========={ PERMISSIONS }==========#
	set {_permissionslist::*} to configuration section "multipliers.permissions" get of "plugins/Skript/superdrops/config.yml"
	loop {_permissionslist::*}:
		if player has permission "sd.mp.fishing.%loop-value%":
			set {_permission} to single value "multipliers.permissions.%loop-value%" get of "plugins/Skript/superdrops/config.yml" parsed as number
			set {_multiplier} to {_multiplier}*{_permission}
			exit loop
#=========={ SUPER TOOLS }==========#
	name of player's tool is "&bSuperFishingRod":
#----------{ smelting 1 }----------#
		1st line of lore of player's tool is "&7Smelting I":
			set {_smelting.mode} to true
		else:
			set {_smelting.mode} to false
#----------{ fortune 10 }----------#
		1st line of lore of player's tool is "&7Luck of the Sea X":
			set {_multipliers::super} to single value "multipliers.other.super" get of "plugins/Skript/superdrops/config.yml" parsed as number
			set {_multiplier} to {_multiplier}*{_multipliers::super}
#=========={ FORTUNES }==========#
	player's tool is enchanted with Luck of the Sea 3:
		set {_multipliers::fortune} to single value "multipliers.fortune.3" get of "plugins/Skript/superdrops/config.yml" parsed as number
		set {_multiplier} to {_multiplier}*{_multipliers::fortune}
	player's tool is enchanted with Luck of the Sea 2:
		set {_multipliers::fortune} to single value "multipliers.fortune.2" get of "plugins/Skript/superdrops/config.yml" parsed as number
		set {_multiplier} to {_multiplier}*{_multipliers::fortune}
	player's tool is enchanted with Luck of the Sea 1:
		set {_multipliers::fortune} to single value "multipliers.fortune.1" get of "plugins/Skript/superdrops/config.yml" parsed as number
		set {_multiplier} to {_multiplier}*{_multipliers::fortune}
#=========={ TURBODROP }==========#
	set {_multipliers::turbodrop} to single value "multipliers.other.turbodrop" get of "plugins/Skript/superdrops/config.yml" parsed as number
	if {_multipliers::turbodrop} is set:
		set {_multiplier} to {_multiplier}*{_multipliers::turbodrop}
#=========={ CONFIG }==========#
	set {_config::xp} to single value "fishing.xp" get of "plugins/Skript/superdrops/config.yml" parsed as number
	set {_basiclist::*} to configuration section "fishing" get of "plugins/Skript/superdrops/config.yml"
	loop {_basiclist::*}:
		loop-value isn't "xp":
			set {_itemlist::%loop-index%} to loop-value
	loop {_itemlist::*}:
		{_smelting.mode} is true:
			set {_config::item} to single value "fishing.%loop-value%.itemsmelted" get of "plugins/Skript/superdrops/config.yml" parsed as itemtype
		else:
			set {_config::item} to single value "fishing.%loop-value%.item" get of "plugins/Skript/superdrops/config.yml" parsed as itemtype
		set {_config::chance} to single value "fishing.%loop-value%.chance" get of "plugins/Skript/superdrops/config.yml" parsed as integer
		set {_config::biomes::*} to value list "fishing.%loop-value%.biomes" get of "plugins/Skript/superdrops/config.yml"
#=========={ DROPPING }==========#
		loop {_config::xp} times:
			give 1 xp to player
		if {_config::biomes::*} is not set:
			set {_goodbiome} to true
		else:
			loop {_config::biomes::*}:
				if biome at player is (loop-value-2 parsed as biome):
					set {_goodbiome} to true
		if {_goodbiome} is true:
			set {_realchance} to {_config::chance}*{_multiplier}/100
			if {_realchance} is greater than 1:
				set {_realchance} to 1
			chance of {_realchance}:
			#	cancel event
			#	damage player's tool by 1
				set {_config::message} to single value "messages.dropped" get of "plugins/Skript/superdrops/config.yml"
				drop {_config::item} at event-location
				replace all "{ITEM}" with "%{_config::item}%" in {_config::message}
				send "%coloured {_config::message}%"
				add 1 to {superdrops::top::fishing::%{_config::item}%::%player%}

command /sdadmin [<text>]:
	aliases: superdropsadmin
	trigger:
		if player has permission "dropy.admin" or "dropy.*":
			arg 1 is "odswiez" or "reload":
				execute player command "/sk reload %script%"
#on click:
#	set {_block} to type of event-block
#	loop {superdrops::replace::*}:
#		if loop-value is {_block}:
#			set clicked block to {superdrops::replace::%loop-value%::block}
#			send "%{superdrops::replace::%loop-value%::message}%"
#		else:
#			send "nie w configu!"
command /biome:
	trigger:
		send "%biome at player%"
		if biome at player is biome:
			send "%biome at player%"

on explode:
	cancel event
	broadcast "Jebs!"
	uncancel event
