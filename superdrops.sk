superdrops.sk

#hercore superdrops
#=============================================#
#   Skrypt napisany przez: herhor67           #
#   Nazwa: SuperDrops                         #
#=============================================#
#  Licencja skryptu:                          #
# * Nie zezwalam na:                          #
# - Usuwanie treści o autorze!                #
# - Podszywanie się pod autora!               #
# - Używanie kodu skryptu w swoich skryptach! #
# - Zarabianie na skrypcie!                   #
# - Wrzucanie skryptu do internetu!           #
# - Dodawanie kodu na swoja potrzebe!         #
# - Modyfikowanie kodu na swoja potrzebe!     #
#=============================================#

options:
#szansa bez fortuny:
	wegiel: 1.6
	diament: 0.2
	szmaragd: 0.3
	zloto: 0.4
	zelazo: 0.6
	lazuryt: 1.9
	redstone: 1.9
	kwarc: 1.9
	drewno: 2.7

#inneinfo:
	diamentmax: 16
	diamentmin: 9
	szmaragdmax: 128
	szmaragdmin: 60
	wegielmax: 128
	zelazomax: 64
	zlotomax: 32
	lapismax:32
	redstonemax: 16

#ilosc expa za 1 blok
	xp: 1

aliases:
	diament = 57
	diamentitem = 264

on script load:
	wait 1 second
	if file "plugins/Skript/superdrops/multipliers.yml" doesn't exists:
		download "https://raw.githubusercontent.com/herhor67/superdrops/master/multipliers.yml" to "plugins/Skript/superdrops/multipliers.yml"
#w	wait 1 second
#------------#
#	clear {superdrops::multipliers::*}   
#	set {superdrops::multipliers::*} to configuration section "multipliers" get of "plugins/Skript/superdrops/multipliers.yml"
#	loop {superdrops::multipliers::*}:
#		set {superdrops::multipliers::%loop-value%::*} to configuration section "multipliers.%loop-value%" get of "plugins/Skript/superdrops/multipliers.yml"
#		loop {superdrops::multipliers::%loop-value%::*}:
#			set {superdrops::multipliers::%loop-value-1%::%loop-value-2%} to single value "multipliers.%loop-value-1%.%loop-value-2%" get of "plugins/Skript/superdrops/multipliers.yml" parsed as number
#			broadcast "%{superdrops::multipliers::%loop-value-1%::%loop-value-2%}%"
#------------#
#	clear {superdrops::drop::*}
#	set {superdrops::drop::*} to configuration section "drop" get of "plugins/Skript/superdrops/config.yml"
#	loop {superdrops::drop::*}:
#		set {superdrops::drop::%loop-value%::*} to configuration section "drop.%loop-value%" get of "plugins/Skript/superdrops/config.yml"
#		loop {superdrops::drop::%loop-value%::*}:
#			set {superdrops::drop::%loop-value-1%::%loop-value-2%::*} to configuration section "drop.%loop-value-1%.%loop-value-2%" get of "plugins/Skript/superdrops/config.yml"
#			loop {superdrops::drop::%loop-value-1%::%loop-value-2%::*}:
#				set {superdrops::drop::%loop-value-1%::%loop-value-2%::%loop-value-3%} to single value "drop.%loop-value-1%.%loop-value-2%.%loop-value-3%" get of "plugins/Skript/superdrops/config.yml"
#				broadcast "%{superdrops::drop::%loop-value-1%::%loop-value-2%::%loop-value-3%}%"
#------------#
#	clear {superdrops::replace::*}
#	set {superdrops::replace::*} to configuration section "replace" get of "plugins/Skript/superdrops/replace.yml"
#	loop {superdrops::replace::*}:
#		set {superdrops::replace::%loop-value%::*} to configuration section "replace.%loop-value%" get of "plugins/Skript/superdrops/replace.yml"
#		loop {superdrops::replace::%loop-value%::*}:
#			set {superdrops::replace::%loop-value-1%::%loop-value-2%} to single value "replace.%loop-value-1%.%loop-value-2%" get of "plugins/Skript/superdrops/replace.yml"
#			broadcast "%{superdrops::replace::%loop-value-1%::%loop-value-2%}%"
#------------#
	register new shaped recipe for diamond pickaxe named "&bSuperKilof" with lore "&7Fortune X" using diament, diament, diament, none, stick, none, none, stick, none
	register new shaped recipe for diamond pickaxe named "&bSuperKilof" with lore "&7Smelting I" using diamentitem, furnace, diamentitem, none, stick, none, none, stick, none

command /superdrops [<text>] [<text>]:
	aliases: sd, superdrop
	trigger:
		arg 1 is "szansa":
			arg 2 is set:
				set {_mnoznik} to 1
				loop {superdrop::multipliers::permissions::*}:
					if player has permission "superdrops.%loop-index%":
						loop-value isn't 0:
							set {_mnoznik} to {_mnoznik}*loop-value
							exit loop
			#	{superdrops::turbodrop} is set:
			#		set {_mnoznik} to {_mnoznik}*{superdrops::turbodrop}
				send "&6----------------=============[ &7[&cSuper&6Drop&7] &6]=============----------------"
				send "&fNazwa surowca  &f&l| &fBez enchantu &f&l| &fFortune I   &f&l| &fFortune II   &f&l| &fFortune III"
				send "&f&l----------------------------------------------------------------"
				loop {superdrops::drop::%arg 2%::*}:
					set {_f0} to {superdrops::drop::%arg 2%::%loop-value%::chance} * {_mnoznik}
					set {_f1} to {superdrops::drop::%arg 2%::%loop-value%::chance} * {_mnoznik} * {superdrops::multipliers::fortune::fortune1}
					set {_f2} to {superdrops::drop::%arg 2%::%loop-value%::chance} * {_mnoznik} * {superdrops::multipliers::fortune::fortune2}
					set {_f3} to {superdrops::drop::%arg 2%::%loop-value%::chance} * {_mnoznik} * {superdrops::multipliers::fortune::fortune3}
					send "%coloured {superdrops::drop::%arg 2%::%loop-value%::name}%  &f&l| &f%{_f0}%            &f&l| &f%{_f1}%           &f&l| &f%{_f2}%           &f&l| &f%{_f3}%"
					send "&f&l----------------------------------------------------------------"

on break:
	set {_block} to type of event-block# parsed as itemtype
	send "Kopiesz: %{_block}%"
#==============================={ MULTIPLIERS }===============================#
	set {_multiplier} to 1
	 set {_firstmulti::*} to configuration section "multipliers.permissions" get of "plugins/Skript/superdrops/config.yml"
	 loop {_firstmulti::*}:
			if player has permission "superdrops.multiplier.%loop-value%":
				set {_permission} to single value "multipliers.permissions.%loop-value%" get of "plugins/Skript/superdrops/config.yml"
				set {_multiplier} to {_multiplier}*{_permission}
				exit loop
	name of player's tool contains "&bSuper":
		first line of lore of player's tool is "&7Fortune X":
			set {_mnoznik} to {_mnoznik}*{superdrops::mno}
	player's tool is diamond pickaxe named "&bSuperKilof" with lore "&7Smelting I":
		set {_smelt.mode} to true
	player's tool is any tool of Fortune 3:
		set {_mnoznik} to {_mnoznik}*{superdrops::mnoznik::fortune3}
	player's tool is any tool of Fortune 2:
		set {_mnoznik} to {_mnoznik}*{superdrops::mnoznik::fortune2}
	player's tool is any tool of Fortune 1:
		set {_mnoznik} to {_mnoznik}*{superdrops::mnoznik::fortune1}
	if {superdrops::turbodrop} is set:
		set {_mnoznik} to {_mnoznik}*{superdrops::turbodrop}
#=========={ XP }==========#
	give {@xp} xp to player
#=========={ CONFIG }==========#
	set {_firstlist::*} to configuration section "drop.%{_block}%" get of "plugins/Skript/superdrops/config.yml"
	loop {_firstlist::*}:
		send "%loop-index% => %loop-value%"
		set {_secondlist::*} to configuration section "drop.%{_block}%.%loop-value%" get of "plugins/Skript/superdrops/config.yml"
		loop {_secondlist::*}:
			if loop-value isn't "tools":
				set {_config::%loop-value-2%} to single value "drop.%{_block}%.%loop-value-1%.%loop-value-2%" get of "plugins/Skript/superdrops/config.yml"
		 set {_config::tools::*} to value list "drop.%{_block}%.%loop-value-1%.tool" get of "plugins/Skript/superdrops/config.yml"
#=========={ DROPPING }==========#
		if event-block's y-coordinate is less than {_config::heightmax}:
			if event-block's y-coordinate is greater than {_config::heightmin}:
				if player's tool is any element of {_config::tools::*}:
					chance of {_config::chance}*{_mnoznik}/100:
						{_smelt.mode} isn't true:
							drop {_config::item} at event-block
							send "Wydropiles item: %{_config::item}%!"
						else:
							drop {_config::itemsmelted} at event-block
							send "Wydropiles itemsmelted: %{_config::itemsmelted}%!"
					else:
						send "brak szansy!"
				else:
					send "zle narzedzie!"
			else:
				send "za wysoko!"
		else:
			send "za nisko!"

command /sdadmin [<text>]:
	aliases: superdropsadmin
	trigger:
		if player has permission "dropy.admin" or "dropy.*":
			arg 1 is "odswiez" or "reload":
				execute player command "/sk reload %script%"

#on click:
#	set {_block} to type of event-block
#	loop {superdrops::replace::*}:
#		if loop-value is {_block}:
#			set clicked block to {superdrops::replace::%loop-value%::block}
#			send "%{superdrops::replace::%loop-value%::message}%"
#		else:
#			send "nie w configu!"

on explode:
	cancel event
	broadcast "Jebs!"
	uncancel event
